http {
    upstream solver_backend {
        server solver1:3003;
        server solver2:3003;
        server solver3:3003;

        # Active health check for backends (example)
        health_check interval=10s timeout=2s fails=3 passes=2;
    }

    server {
        listen 80;

        # SSL termination
        listen 443 ssl;
        ssl_certificate /etc/ssl/certs/your_cert.crt;
        ssl_certificate_key /etc/ssl/private/your_key.key;

        # Caching static assets
        location /static/ {
            expires 30d;
            add_header Cache-Control "public";
        }

        location / {
            limit_req zone=req_limit burst=200 nodelay;
            proxy_pass http://solver_backend;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Sticky sessions
            proxy_cookie_path / "/; HTTPOnly; Secure; SameSite=Strict";
        }

        # Error handling
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}
