services:
  frontend:
    build:
      context: ./frontend
    environment:
      NODE_ENV: production
      PROBLEM_HANDLER_API_URL: http://problem_handler:3002
    env_file:
      - path: ./frontend/.env.local
        required: true
    ports:
      - 3000:3000
    networks:
      - app-network

  credits:
    build:
      context: ./credits_ms
    environment:
      NODE_ENV: production
      RABBITMQ_URL: amqp://rabbitmq:5672
    env_file:
      - path: ./credits_ms/.env.local
        required: true
    ports:
      - "3001:3001"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  problem_handler:
    build:
      context: ./problem_handler_ms
    environment:
      NODE_ENV: production
      RABBITMQ_URL: amqp://rabbitmq:5672
    env_file:
      - path: ./problem_handler_ms/.env.local
        required: true
    ports:
      - "3002:3002"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  solver:
    build:
      context: ./solver_ms
    environment:
      NODE_ENV: production
      RABBITMQ_URL: amqp://rabbitmq:5672
    env_file:
      - path: ./solver_ms/.env.local
        required: true
    ports:
      - "3003:3003"
    command: ["/bin/sh", "-c", ". /venv/bin/activate && npm start"]
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

networks:
  app-network:
