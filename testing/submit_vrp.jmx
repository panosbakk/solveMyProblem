<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Users">
        <intProp name="ThreadGroup.num_threads">100</intProp>
        <intProp name="ThreadGroup.ramp_time">0</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">3002</stringProp>
          <stringProp name="HTTPSampler.path">/api/probhandler/addproblem</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{	&#xd;
	&quot;userId&quot;: &quot;user_2mTjp8tWLXPaxuPN00OFyW09k9Z&quot;,&#xd;
    &quot;category&quot;: &quot;vrp&quot;,&#xd;
    &quot;json&quot;: {&#xd;
        &quot;num_vehicles&quot;:&quot;3&quot;,&#xd;
        &quot;depot&quot;: &quot;0&quot;,&#xd;
        &quot;max_distance&quot;:&quot;7999999&quot;,&#xd;
        &quot;locations&quot; : {&#xd;
  &quot;Locations&quot;: [&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9998332818384,&#xd;
      &quot;Longitude&quot;: 23.7431771479843&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.966783510526,&#xd;
      &quot;Longitude&quot;: 23.7786055336422&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9990464764814,&#xd;
      &quot;Longitude&quot;: 23.7732513981902&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9740702363407,&#xd;
      &quot;Longitude&quot;: 23.7375198905651&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9976370555679,&#xd;
      &quot;Longitude&quot;: 23.766326699717&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9871581852694,&#xd;
      &quot;Longitude&quot;: 23.7600403988099&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9656595261289,&#xd;
      &quot;Longitude&quot;: 23.7804481656328&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 38.0081619401188,&#xd;
      &quot;Longitude&quot;: 23.7437267361884&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9834746564623,&#xd;
      &quot;Longitude&quot;: 23.7325686491771&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9636241334636,&#xd;
      &quot;Longitude&quot;: 23.7778582015461&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9658106007088,&#xd;
      &quot;Longitude&quot;: 23.7213368725731&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9762429354646,&#xd;
      &quot;Longitude&quot;: 23.7402382017401&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 38.0056680973323,&#xd;
      &quot;Longitude&quot;: 23.7280890826921&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 38.0013238772217,&#xd;
      &quot;Longitude&quot;: 23.7583040097244&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9632024791509,&#xd;
      &quot;Longitude&quot;: 23.7851749644623&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9653577058191,&#xd;
      &quot;Longitude&quot;: 23.743200049927&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9692186084866,&#xd;
      &quot;Longitude&quot;: 23.7851108524873&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9827169763799,&#xd;
      &quot;Longitude&quot;: 23.7354215305124&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9723001307611,&#xd;
      &quot;Longitude&quot;: 23.7884239333305&#xd;
    },&#xd;
    {&#xd;
      &quot;Latitude&quot;: 37.9782788027907,&#xd;
      &quot;Longitude&quot;: 23.7588455894457&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-api-key</stringProp>
                <stringProp name="Header.value">dsjkfas#21k1!kfdso0$#</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/Users/arissaltagiannis/Documents/ECE NTUA/ai-logs-veskou/submit_vrp_results.csv</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
